/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cs.arizona.edu.gephiplugins;

import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.gephi.filters.spi.FilterProperty;
import org.openide.util.WeakListeners;

/**
 *
 * @author iychoi
 */
public class TopBotEdgeWeightFilterPanel extends javax.swing.JPanel implements ChangeListener {

    private TopBotEdgeWeightFilter filter;
    
    /**
     * Creates new form TopBotEdgeFilterPanel
     */
    public TopBotEdgeWeightFilterPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        topSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        botSpinner = new javax.swing.JSpinner();

        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(TopBotEdgeWeightFilterPanel.class, "TopBotEdgeWeightFilterPanel.jLabel1.text")); // NOI18N
        add(jLabel1, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        add(topSpinner, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(TopBotEdgeWeightFilterPanel.class, "TopBotEdgeWeightFilterPanel.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        add(botSpinner, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner botSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner topSpinner;
    // End of variables declaration//GEN-END:variables

    public void setup(TopBotEdgeWeightFilter filter) {
        this.filter = filter; 
        final SpinnerNumberModel topModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1); 
        topSpinner.setModel(topModel); 
        topModel.addChangeListener(WeakListeners.change(this, topModel)); 
        
        final SpinnerNumberModel botModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1); 
        topSpinner.setModel(botModel); 
        botModel.addChangeListener(WeakListeners.change(this, botModel)); 
    }

    @Override
    public void stateChanged(ChangeEvent ce) {
        FilterProperty top = filter.getProperties()[0]; 
        try { 
            top.setValue((Number) topSpinner.getValue()); 
        } catch (Exception e) {
            e.printStackTrace();
        } 
        
        FilterProperty bot = filter.getProperties()[1]; 
        try { 
            bot.setValue((Number) botSpinner.getValue()); 
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }
}
